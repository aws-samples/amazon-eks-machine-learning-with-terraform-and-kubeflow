ray:
  version: '2.45.0'
  dashboard:
    host: '0.0.0.0'
  restart_policy:
    head: Never
    worker: Never
  ports:
    - name: gcs
      port: 6379
    - name: client
      port: 10001
    - name: dashboard
      port: 8265
    - name: serve
      port: 8000
  resources:
    requests:
      cpu: 1
    limits:
      cpu: 4
    node_type: 'inf2.48xlarge' 
  tolerations:
  - key: "aws.amazon.com/neuron"
    operator: "Exists"
    effect: "NoSchedule"
  env:
    - name: ENGINE_CONFIG
      value: /efs/home/{{ .Release.Name }}/config/engine.json
    - name: NEURON_CC_FLAGS
      value: "--model-type transformer --enable-fast-loading-neuron-binaries"
    - name: NEURON_COMPILE_CACHE_URL
      value: "/tmp"
    - name: NEURON_COMPILED_ARTIFACTS
      value: /efs/home/{{ .Release.Name }}/config
    - name: VLLM_NEURON_FRAMEWORK
      value: "neuronx-distributed-inference"
  serve_config_v2: 
    serveConfigV2: |
      applications:
        - name: meta-llama3-8b-instruct
          import_path: vllm_asyncllmengine:deployment
          runtime_env:
            working_dir: file:///fsx/rayserve/engines/vllm_asyncllmengine.zip
          deployments:
          - name: VLLMDeployment
            max_ongoing_requests: 48
            autoscaling_config:
              min_replicas: 3
              max_replicas: 6
              target_ongoing_requests: 24
            ray_actor_options:
              resources: 
                "neuron_cores": 8
  service_unhealthy_threshold_secs: 900
  deployment_unhealthy_threshold_secs: 900
image:
image_pull_policy: IfNotPresent
scheduler_name: neuron-scheduler
resources:
  min_replicas: 3
  max_replicas: 6
  requests:
    "aws.amazon.com/neuron": 4
    memory: 128Gi
    cpu: 16
  limits:
    "aws.amazon.com/neuron": 4
    memory: 180Gi
    cpu: 60
  node_type: 'inf2.48xlarge' 
tolerations:
  - key: "aws.amazon.com/neuron"
    operator: "Exists"
    effect: "NoSchedule"
pvc:
  - name: pv-fsx
    mount_path: /fsx
  - name: pv-efs
    mount_path: /efs