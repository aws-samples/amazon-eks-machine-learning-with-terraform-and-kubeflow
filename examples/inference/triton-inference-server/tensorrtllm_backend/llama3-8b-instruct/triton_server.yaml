image: 
  name: 
resources:
  node_type: g6.48xlarge
  requests:
    "nvidia.com/gpu": 8
  limits:
    "nvidia.com/gpu": 8
tolerations:
  - key: "nvidia.com/gpu"
    operator: "Exists"
    effect: "NoSchedule"
ebs:
  storage: 400Gi
  mount_path: /tmp
pre_script: 
  - SCRIPT_DIR=TensorRT-LLM/triton_backend
  - cd $SCRIPT_DIR
  - mkdir -p $LOG_ROOT
  - TP_SIZE=8
  - PP_SIZE=1
  - OUTPUT_LOG="$LOG_ROOT/triton_server_tp_${TP_SIZE}_pp_${PP_SIZE}.log"
  - MODEL_REPO=$OUTPUT_ROOT/inflight_batcher_llm_tp_${TP_SIZE}_pp_${PP_SIZE}
server:
  ports:
    - name: 'http'
      value: '8000'
    - name: 'grpc'
      value: '8001'
    - name: 'metric'
      value: '8002'
  readiness_probe:
    period_secs: 5
    failure_threshold: 3
  startup_probe:
    period_secs: 10
    failure_threshold: 30
  liveness_probe:
    period_secs: 10
    failure_threshold: 3
  env:
    - name: HOME
      value: /tmp
    - name: LOG_ROOT
      value: /efs/home/{{ .Release.Name }}/logs
    - name: OUTPUT_ROOT
      value: /efs/home/{{ .Release.Name }}/trtllm
  command:
    - python3
  args:
    - scripts/launch_triton_server.py
    - --world_size=$((TP_SIZE * PP_SIZE))
    - --model_repo=${MODEL_REPO}
    - --grpc_port=8001
    - --http_port=8000
    - --metrics_port=8002
    - --log-file=$OUTPUT_LOG
  autoscaling:
    minReplicas: 1
    maxReplicas: 4
    metrics:
      - type: Pods
        pods:
          metric:
            name: avg_time_queue_us
          target:
            type: AverageValue
            averageValue: 50
